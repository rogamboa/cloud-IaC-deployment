Description: >
    This template deploys network infrastructure.

Parameters:

    EnvironmentName:
        Type: String
        Description: Environment name that will be used as a prefix for resource names
  
    VpcCIDR:
        Type: String
        Description: The CIDR Block for the VPC
        Default: 10.0.0.0/16
        AllowedPattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([1-2][0-9]|[3][0-2]|[0-9])$
        ConstraintDescription: A valid VPC CIDR block must be inputed.
    
    PubSubnet1CIDR:
        Type: String
        Description: The CIDR Block for the VPC
        Default: 10.0.0.0/24
        AllowedPattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([1-2][0-9]|[3][0-2]|[0-9])$
        ConstraintDescription: A valid VPC CIDR block must be inputed.
 
    PubSubnet2CIDR:
        Type: String
        Description: The CIDR Block for the VPC
        Default: 10.0.1.0/24
        AllowedPattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([1-2][0-9]|[3][0-2]|[0-9])$
        ConstraintDescription: A valid VPC CIDR block must be inputed.
    
    PrivSubnet1CIDR:
        Type: String
        Description: The CIDR Block for the VPC
        Default: 10.0.2.0/24
        AllowedPattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([1-2][0-9]|[3][0-2]|[0-9])$
        ConstraintDescription: A valid VPC CIDR block must be inputed.
    
    PrivSubnet2CIDR:
        Type: String
        Description: The CIDR Block for the VPC
        Default: 10.0.3.0/24
        AllowedPattern: ^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/([1-2][0-9]|[3][0-2]|[0-9])$
        ConstraintDescription: A valid VPC CIDR block must be inputed.
    
Resources:
    VPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsHostnames: true
            Tags: 
                - Key: Name 
                  Value: !Ref EnvironmentName
              
    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
                  
    InternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref InternetGateway
            VpcId: !Ref VPC
            
    PubSubnet1: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PubSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub 
                    - ${EnvName} Public Subnet 1 (${az})
                    - EnvName: !Ref  EnvironmentName
                      az: !Select [ 0, !GetAZs '' ]

    PubSubnet2: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PubSubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub 
                    - ${EnvName} Public Subnet 2 (${az})
                    - EnvName: !Ref  EnvironmentName
                      az: !Select [ 1, !GetAZs '' ]

    PrivSubnet1: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 0, !GetAZs '' ]
            CidrBlock: !Ref PrivSubnet1CIDR
            MapPublicIpOnLaunch: false
            Tags: 
                - Key: Name 
                  Value: !Sub 
                    - ${EnvName} Private Subnet 1 (${az})
                    - EnvName: !Ref  EnvironmentName
                      az: !Select [ 0, !GetAZs '' ]

    PrivSubnet2: 
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select [ 1, !GetAZs '' ]
            CidrBlock: !Ref PrivSubnet2CIDR
            MapPublicIpOnLaunch: false
            Tags: 
                - Key: Name 
                  Value: !Sub 
                    - ${EnvName} Private Subnet 2 (${az})
                    - EnvName: !Ref  EnvironmentName
                      az: !Select [ 1, !GetAZs '' ]

    NatGateway1EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties: 
            Domain: vpc

    NatGateway2EIP:
        Type: AWS::EC2::EIP
        DependsOn: InternetGatewayAttachment
        Properties:
            Domain: vpc
            
    NatGateway1: 
        Type: AWS::EC2::NatGateway
        Properties: 
            AllocationId: !GetAtt NatGateway1EIP.AllocationId
            SubnetId: !Ref PubSubnet1

    NatGateway2: 
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NatGateway2EIP.AllocationId
            SubnetId: !Ref PubSubnet2

    PubRouteTable:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Public Routes

    DefaultPubRoute: 
        Type: AWS::EC2::Route
        DependsOn: InternetGatewayAttachment
        Properties: 
            RouteTableId: !Ref PubRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway  

    PubSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PubRouteTable
            SubnetId: !Ref PubSubnet1

    PubSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PubRouteTable
            SubnetId: !Ref PubSubnet2     
            
    PrivRouteTable1:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub 
                    - ${EnvName} Private Routes (${az})
                    - EnvName: !Ref  EnvironmentName
                      az: !Select [ 0, !GetAZs '' ]
                         
    DefaultPrivRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivRouteTable1
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway1   
            
    PrivSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivRouteTable1
            SubnetId: !Ref PrivSubnet1         

    PrivRouteTable2:
        Type: AWS::EC2::RouteTable
        Properties: 
            VpcId: !Ref VPC
            Tags: 
                - Key: Name 
                  Value: !Sub 
                    - ${EnvName} Private Routes (${az})
                    - EnvName: !Ref  EnvironmentName
                      az: !Select [ 1, !GetAZs '' ]

    DefaultPrivRoute2:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivRouteTable2
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway2

    PrivSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivRouteTable2
            SubnetId: !Ref PrivSubnet2

